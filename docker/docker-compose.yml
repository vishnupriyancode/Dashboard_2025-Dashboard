version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: dashboard-postgres
    environment:
      POSTGRES_DB: dashboard_db
      POSTGRES_USER: dashboard_user
      POSTGRES_PASSWORD: dashboard_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - dashboard-network

  dashboard-app:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    image: dashboard-2025:latest
    container_name: dashboard-app
    ports:
      - "3000:3000"
      - "5001:5001"
    environment:
      - NODE_ENV=production
      - PORT=5001
      - REACT_APP_API_URL=http://localhost:5001/api
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - DATABASE_URL=postgresql://dashboard_user:dashboard_pass@postgres:5432/dashboard_db
    restart: unless-stopped
    volumes:
      - dashboard-data:/app/backend/data
      - dashboard-logs:/app/logs
    networks:
      - dashboard-network
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5001/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres-data:
    driver: local
  dashboard-data:
    driver: local
  dashboard-logs:
    driver: local

networks:
  dashboard-network:
    driver: bridge 